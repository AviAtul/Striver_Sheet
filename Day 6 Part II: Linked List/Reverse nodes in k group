class Solution {
private:
    int length(ListNode* head){
        ListNode* dummy = head;
        int len = 0;
        while(dummy!=NULL){
            dummy = dummy->next;
            len++;
        }return len;
    }
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head == NULL || k==1)return head;
        int len = length(head);
        // cout<<len<<endl;
        int cnt = len;
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode* curr = dummy, *prev = dummy, *nex = dummy;
        while(cnt >= k){
            curr = prev->next;
            nex = curr->next;
            for(int i = 1; i<k; i++){
                curr->next = nex->next;
                nex->next = prev->next;
                prev->next = nex;
                nex = curr->next;   
            }cnt = cnt-k;
            prev = curr;
        }return dummy->next;
    }
};
