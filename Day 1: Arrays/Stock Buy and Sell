Approach 1:
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int ans = 0;
        for(int i = 0; i<prices.size(); i++){
            for(int j = i+1; j<prices.size(); j++){
                ans = max(ans, prices[j]-prices[i]);
            }
        }return ans;
    }
};

Approach 2:
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()==0)return 0;
        int ans = 0;
        int ptr1 =0;
        int ptr2 = 1;
        while(ptr2<=prices.size()-1){
            if(prices[ptr1]>prices[ptr2]){
                ptr1++;
                ptr2 = ptr1+1;
            }else{
                ans = max(ans, prices[ptr2]-prices[ptr1]);
                ptr2++;
            }
        }return ans;
    }
};
