Approach 1:
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        for(int i = 0; i<m; i++){
            for(int j = 0; j<n; j++){
                if(matrix[i][j]==target){
                    return true;
                }
            }
        }return false;
    }
};

Approach 2:
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        int low = 0;
        int high = m*n-1;
        while(low<=high){
            int mid = (low+high)/2;
            int rmid = mid/n;
            int cmid = mid%n;
            if(matrix[rmid][cmid]==target){
                return true;
            }if(matrix[rmid][cmid]<target){
                low = mid+1;
            }else high = mid-1;
        }return false;
    }
};
